/*
 * Main.java
 *
 * Created on September 16, 2007, 6:14 PM
 */
package ch.randelshofer.tree.htdemo;

import ch.randelshofer.tree.DefaultNodeInfo;
import ch.randelshofer.tree.hypertree.HyperTree;
import ch.randelshofer.tree.hypertree.SwingHTView;
import java.awt.*;
import java.io.*;
import javax.swing.*;
import org.jhotdraw.gui.*;

/**
 *
 * @author  werni
 */
public class Main extends javax.swing.JFrame {

    private JFileChooser chooser;
    private File rootFile;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setSize(400, 400);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hypertree");
        fileMenu.setText("File");
        openMenuItem.setText("Open Directory\u2026");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                open(evt);
            }
        });

        fileMenu.add(openMenuItem);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void open(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open
        if (chooser == null) {
            chooser = new JFileChooser();
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }
        if (JFileChooser.APPROVE_OPTION == chooser.showOpenDialog(this)) {
            rootFile = chooser.getSelectedFile();
            setTitle("Hypertree: " + rootFile.getName());
            Worker worker = new Worker() {

                public Object construct() {
                    /*try {
                        FileNode root;
                        if (rootFile.isDirectory()) {
                            root = new DirectoryNode(rootFile);
                            } else {
                            root = new FileNode(rootFile);
                        }
                        HyperTree hypertree = new HyperTree(root, new DefaultNodeInfo());
                        return hypertree;
                    } catch (IOException e) {
                        return e;
                    }*/
                    return null;
                }

                public void finished(Object o) {
                    HyperTree hypertree = (HyperTree) o;
                    SwingHTView view = hypertree.getView();
                    view.setFont(new Font("Dialog", Font.PLAIN, 9));
                    setContentPane(view);
                    validate();
                    repaint();
                }
            };
            worker.start();
        }
    }//GEN-LAST:event_open

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem openMenuItem;
    // End of variables declaration//GEN-END:variables

}

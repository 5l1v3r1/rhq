<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-parent</artifactId>
    <version>1.1.1.GA</version>
  </parent>

  <groupId>org.rhq</groupId>
  <artifactId>rhq-enterprise-agent</artifactId>
  <packaging>jar</packaging>

  <name>RHQ Enterprise Agent</name>
  <description>RHQ Agent</description>

  <scm>
    <connection>scm:svn:http://svn.rhq-project.org/repos/rhq/tags/RHQ_1_1_1_GA/modules/enterprise/agent</connection>
    <developerConnection>scm:svn:http://svn.rhq-project.org/repos/rhq/tags/RHQ_1_1_1_GA/modules/enterprise/agent</developerConnection>
  </scm>

  <properties>
    <scm.module.path>modules/enterprise/agent/</scm.module.path>
  </properties>

  <dependencies>

    <!-- Internal Deps -->

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-domain</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-enterprise-comm</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-plugin-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-plugin-container</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-client-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-rtfilter</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- 3rd Party Deps -->

    <dependency>
      <groupId>gnu-getopt</groupId>
      <artifactId>getopt</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
    </dependency>

    <!-- TODO: This is a fix for the Javac bug requiring annotations to be
         available when compiling dependent classes. It is fixed in JDK 6 -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jboss-remoting</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
    </dependency>

    <dependency>
      <groupId>jboss.jboss-embeddable-ejb3</groupId>
      <artifactId>hibernate-all</artifactId>
      <version>1.0.0.Alpha9</version>
      <scope>provided</scope>
      <!-- needed for referenced domain entities that use Hibernate annotations -->
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <configuration>
              <tasks>

                <!-- generate the I18N resource bundles -->
                <taskdef name="i18n" classpathref="maven.runtime.classpath" classname="mazz.i18n.ant.I18NAntTask" />

                <i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" append="false" verify="true">
                   <classpath refid="maven.runtime.classpath" />
                   <classfileset dir="${project.build.outputDirectory}">
                      <include name="**/AgentI18NResourceKeys.class" />
                      <include name="**/AgentSetupInstructions.class" />
                   </classfileset>
                </i18n>

                <!-- create our version.txt file that goes in our jar -->
                <tstamp>
                  <format property="build.time" pattern="dd.MMM.yyyy HH.mm.ss z" />
                </tstamp>

                <!-- cross-platform way to get the hostname, assuming hostname executable is in your path -->
                <exec executable="hostname" outputproperty="build.hostname" failifexecutionfails="false" failonerror="false" />

                <echo file="${project.build.outputDirectory}/version.txt" append="false">Product-Name=${rhq.product.name}
Product-Version=${project.version}
Module-Name=${pom.name}
Module-Version=${pom.version}
Build-Date=${build.time}
Build-Jdk-Vendor=${java.vendor}
Build-Jdk=${java.version}
Build-OS-Name=${os.name}
Build-OS-Version=${os.version}
Built-By=${user.name}
Build-Machine=${build.hostname}
Build-Number=${buildNumber}
</echo>

              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <!-- TODO [mazz]: get rid of this once we have the agent assembly working -->
          <execution>
            <id>agent-distro-package</id>
            <phase>install</phase>
            <configuration>
              <tasks>
                <ant antfile="${basedir}/ant-run.xml" dir="${basedir}" target="package-dist" inheritAll="false" inheritRefs="false">
                   <property name="settings.localRepository" value="${settings.localRepository}" />
                   <property name="project.version" value="${project.version}" />
                   <property name="agent-with-connectors" value="${agent-with-connectors}" />
                   
                   <property name="concurrent.version" value="${concurrent.version}" />
                   <property name="getopt.version" value="${getopt.version}" />
                   <property name="jboss.version" value="${jboss.version}" />
                   <property name="jboss-common.version" value="${jboss-common.version}" />
                   <property name="jboss-remoting.version" value="${jboss-remoting.version}" />
                   <property name="jboss-serialization.version" value="${jboss-serialization.version}" />
                   <property name="sigar.version" value="${sigar.version}" />
                   <property name="jaxb-api.version" value="${jaxb-api.version}" />
                   <property name="jaxb-impl.version" value="${jaxb-impl.version}" />
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>clean-test-dirs</id>
            <phase>test</phase>
            <configuration>
              <tasks>
                <delete dir="${basedir}/data" />
                <delete dir="${basedir}/plugins" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Product-Name>${rhq.product.name}</Product-Name>
              <Product-Version>${project.version}</Product-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>

      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>

    </plugins>
  </reporting>
  
   <profiles>

      <profile>
         <id>prod</id>
         <properties>         
            <agent-with-connectors>true</agent-with-connectors>
         </properties>
      </profile>

  </profiles>
  
</project>
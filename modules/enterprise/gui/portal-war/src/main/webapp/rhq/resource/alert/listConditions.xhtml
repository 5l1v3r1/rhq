<?xml version="1.0"?>

<!DOCTYPE html
      PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:c="http://java.sun.com/jstl/core"
      xmlns:onc="http://jboss.org/on/component"
      xmlns:onf="http://jboss.org/on/function"
      xmlns:s="http://jboss.com/products/seam/taglib"
      xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
      xmlns:rich="http://richfaces.ajax4jsf.org/rich">

    <ui:composition template="/rhq/layout/main.xhtml">
        <ui:param name="pageTitle" value="Alert Conditions for '#{alertDefinition.name}' on resource '#{alertDefinition.resource.name}'"/>

        <ui:define name="metaHeaders">
           
        </ui:define>

        <ui:define name="breadcrumbs">
            <h:outputLink value="/rhq/resource/alert/listAlertDefinitions.xhtml">
                <f:param name="id" value="#{alertDefinition.resource.id}"/>
                <h:outputText>Alert Definitions</h:outputText>
            </h:outputLink>
            <h:outputText value=">" />
            <h:outputLink value="viewAlert.xhtml">
                <f:param name="ad" value="#{param.ad}" />
                <h:outputText value="Definition for '#{alertDefinition.name}' on resource '#{alertDefinition.resource.name}'" />
            </h:outputLink>
        </ui:define>

        <ui:define name="body">
            <a4j:form>
                <rich:panel id="conditionsPanel">
                    <f:facet name="header">
                        <h:outputText value="Alert Conditions"/>
                    </f:facet>

                    <rich:panel id="conditionExpression">
                            <h:outputText value="#{messages['alert.config.props.CB.ExpressionDetails.1']} " />
                            <h:selectOneMenu value="#{alertDefinition.conditionExpression}">
                                <f:selectItems value="#{alertConditionUIBean.conditionExpressions}" />
                            </h:selectOneMenu>
                            <h:outputText value=" #{messages['alert.config.props.CB.ExpressionDetails.2']}" />
                    </rich:panel>

                    <rich:panel id="conditionSet">
                        <f:facet name="header">
                            <h:outputText value="Condition Set"/>
                        </f:facet>

                        <h:messages />

                        <rich:dataTable id="categoryTable" value="#{alertConditionsUIBean.conditionDescriptions}" var="conditionDescription">
                            <rich:column>
                                <h:outputText value="#{conditionDescription.description}" />
                            </rich:column>

                            <rich:column>
                                <a4j:commandButton id="editButton"
                                                value="Edit"
                                                styleClass="buttonmed"
                                                reRender="categoryOptionsPanel">

                                    <f:setPropertyActionListener value="#{conditionDescription.condition}" target="#{alertConditionsUIBean.currentCondition}" />
                                    <rich:componentControl for="categoryModalPanel" attachTo="editButton" operation="show" event="onclick" />
                                </a4j:commandButton>
                            </rich:column>

                            <rich:column>
                                <a4j:commandButton id="removeButton"
                                                value="Delete"
                                                styleClass="buttonmed"
                                                action="#{alertConditionsUIBean.removeCondition}"
                                                reRender="categoryTable">

                                    <f:setPropertyActionListener value="#{conditionDescription.condition}" target="#{alertConditionsUIBean.currentCondition}" />
                                </a4j:commandButton>
                            </rich:column>
                        </rich:dataTable>

                        <br />
                        <a4j:commandButton id="addConditionButton"
                                        value="Add a new Condition"
                                        action="#{alertConditionsUIBean.addCondition}"
                                        styleClass="buttonmed">
                            <rich:componentControl for="categoryModalPanel" attachTo="addConditionButton" operation="show" event="onclick" />
                            <a4j:support event="onclick" reRender="categoryOptionsPanel"  />
                        </a4j:commandButton>

                    </rich:panel>
                </rich:panel>

                <rich:panel id="recoveryPanel">
                    <f:facet name="header">
                        <h:outputText value="Alert Recovery"/>
                    </f:facet>

                        <h:outputText value="#{messages['alert.config.props.CB.Recovery']} " />
                        <h:outputText value="#{messages['alert.config.props.CB.RecoveryFor']}" />

                        <h:selectOneMenu value="#{alertDefinition.recoveryId}">
                            <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" itemValue="0" />
                            <f:selectItems value="#{alertConditionUIBean.existingAlerts}" />
                        </h:selectOneMenu>
                        <br />

                        <h:selectBooleanCheckbox id="willRecoverCheckbox" value="#{alertDefinition.willRecover}" />
                        <h:outputLabel for="willRecoverCheckbox" value="#{messages['alert.config.props.CB.Content.UntilRecovered']}" />

                        <br />
                        <br />

                </rich:panel>

                <rich:panel id="dampeningPanel">
                    <f:facet name="header">
                        <h:outputText value="Alert Dampening"/>
                    </f:facet>

                        <h:selectOneMenu value="#{alertDefinition.alertDampening.category}">
                            <f:selectItems value="#{alertConditionUIBean.dampeningCategories}" />
                            <a4j:support event="onchange" reRender="dampeningOptions" status="dampeningLoadStatus"  />
                        </h:selectOneMenu>

                        <br />
                        <br />

                        <a4j:status id="dampeningLoadStatus" forceId="true">
                            <f:facet name="start">
                                <strong>
                                    <h:outputText value="Loading Dampening Category..." />
                                </strong>
                                <br /><br />
                                <h:graphicImage value="/images/ajax-loader.gif" />
                            </f:facet>

                            <f:facet name="stop">
                                <s:div id="dampeningOptions">
                                    <ui:fragment rendered="#{alertDefinition.alertDampening.category == 'NONE'}">
                                        <h:outputText value="#{messages['alert.config.props.CB.Content.DampenNone']}" />
                                    </ui:fragment>

                                    <ui:fragment rendered="#{alertDefinition.alertDampening.category == 'CONSECUTIVE_COUNT'}">
                                        <h:outputText value="#{messages['alert.config.props.CB.Content.DampenConsecutiveCount.1']} " />
                                        <h:inputText value="#{alertDefinition.alertDampening.value}"
                                                  required="true"
                                                  maxlength="5"/>
                                        <h:outputText value=" #{messages['alert.config.props.CB.Content.DampenConsecutiveCount.2']}" />
                                    </ui:fragment>

                                    <ui:fragment rendered="#{alertDefinition.alertDampening.category == 'PARTIAL_COUNT'}">
                                        <h:outputText value="#{messages['alert.config.props.CB.Content.DampenPartialCount.1']} " />
                                        <h:inputText value="#{alertDefinition.alertDampening.value}"
                                                  required="true"
                                                  maxlength="5"/>
                                        <h:outputText value=" #{messages['alert.config.props.CB.Content.DampenPartialCount.2']} " />
                                        <h:inputText value="#{alertDefinition.alertDampening.period}" />
                                        <h:outputText value=" #{messages['alert.config.props.CB.Content.DampenPartialCount.3']}" />
                                    </ui:fragment>

                                    <ui:fragment rendered="#{alertDefinition.alertDampening.category == 'DURATION_COUNT'}">
                                        <h:outputText value="#{messages['alert.config.props.CB.Content.DampenDurationCount.1']} " />
                                        <h:inputText value="#{alertDefinition.alertDampening.value}" />
                                        <h:outputText value=" #{messages['alert.config.props.CB.Content.DampenDurationCount.2']} " />
                                        <h:inputText value="#{alertDefinition.alertDampening.period}" />

                                        <h:selectOneMenu value="#{alertDefinition.alertDampening.periodUnits}">
                                            <f:selectItems value="#{alertConditionUIBean.timeUnits}" />
                                        </h:selectOneMenu>
                                    </ui:fragment>
                                </s:div>
                            </f:facet>
                        </a4j:status>

                </rich:panel>
            <h:commandButton id="saveButton"
                           value="OK"
                           action="#{alertConditionsUIBean.saveAlertDefinition}"
                           styleClass="buttonmed" />
            </a4j:form>

            <rich:modalPanel id="categoryModalPanel" moveable="false" autosized="true" width="400">

                <rich:panel id="categoryOptionsPanel">
                    <h:panelGrid columns="1" cellpadding="5" width="%100">
                        <h:form id="categoryForm">
                            <h:selectOneMenu value="#{alertConditionsUIBean.currentCondition.category}">
                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                <s:selectItems value="#{alertConditionsUIBean.categories}" />
                                <a4j:support event="onchange" reRender="categoryOptions" status="categoryLoadStatus" />
                            </h:selectOneMenu>
                         </h:form>


                        <a4j:status id="categoryLoadStatus">
                            <f:facet name="start">
                                <strong>
                                    <h:outputText value="Loading Condition..." />
                                </strong>
                                <br /><br />
                                <h:graphicImage value="/images/ajax-loader.gif" />
                            </f:facet>

                            <f:facet name="stop">
                                <h:form>
                                    <rich:panel id="categoryOptions" style="width: %100;">

                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'CONTROL'}">
                                            <h:outputLabel for="operationSelection" value="#{messages['alert.config.props.CB.Content.ControlAction']} " />

                                            <h:selectOneMenu id="operationSelection" value="#{alertConditionsUIBean.currentCondition.name}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.operations}" />
                                            </h:selectOneMenu>

                                            <h:outputText value=" #{messages['alert.config.props.CB.Content.Comparator.=']} " />

                                            <h:selectOneMenu id="operationStatusSelection" value="#{alertConditionsUIBean.currentCondition.option}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.operationStatuses}" />
                                            </h:selectOneMenu>
                                        </ui:fragment>


                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'AVAILABILITY'}">
                                            <h:outputLabel for="availabilitySelection" value="#{messages['alert.config.props.CB.Content.Availability']} " />

                                            <h:selectOneMenu id="availabilitySelection" value="#{alertConditionsUIBean.currentCondition.option}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.availabilities}" />
                                            </h:selectOneMenu>
                                        </ui:fragment>


                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'CHANGE'}">
                                            <h:outputLabel for="metricChangeSelection" value="#{messages['alert.config.props.CB.Content.Metric']} " />

                                            <h:selectOneMenu id="metricChangeSelection" value="#{alertConditionsUIBean.measurementDefinitionId}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.measurements}" />
                                            </h:selectOneMenu>

                                            <h:outputText value=" #{messages['alert.config.props.CB.Content.Changes']}" />
                                        </ui:fragment>


                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'THRESHOLD'}">
                                            <h:outputLabel for="metricThresholdSelection" value="#{messages['alert.config.props.CB.Content.Metric']}" />

                                            <h:selectOneMenu id="metricThresholdSelection" value="#{alertConditionsUIBean.measurementDefinitionId}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.measurements}" />
                                            </h:selectOneMenu>

                                            <h:outputText value="#{messages['alert.config.props.CB.Content.Is']}" />

                                            <h:selectOneMenu id="metricThresholdComparatorSelection" value="#{alertConditionsUIBean.currentCondition.comparator}">
                                                <f:selectItems value="#{alertConditionUIBean.comparators}" />
                                            </h:selectOneMenu>
                                            <br />
                                            <br />

                                            <h:inputText id="metricThresholdAbsolute" value="#{alertConditionsUIBean.threshold}" />
                                            <h:outputLabel for="metricThresholdAbsolute" value="#{messages['alert.config.props.CB.Content.AbsoluteValue']}" />
                                        </ui:fragment>

                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'BASELINE'}">
                                            <h:outputLabel for="metricBaselineSelection" value="#{messages['alert.config.props.CB.Content.Metric']} " />

                                            <h:selectOneMenu id="metricBaselineSelection" value="#{alertConditionsUIBean.measurementDefinitionId}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.measurements}" />
                                            </h:selectOneMenu>

                                            <h:outputText value=" #{messages['alert.config.props.CB.Content.Is']} " />

                                            <h:selectOneMenu id="metricBaselineComparatorSelection" value="#{alertConditionsUIBean.currentCondition.comparator}">
                                                <f:selectItems value="#{alertConditionUIBean.comparators}" />
                                            </h:selectOneMenu>
                                            <br />
                                            <br />

                                            <h:inputText id="metricBaselinePercent" value="#{alertConditionsUIBean.currentCondition.threshold}" converter="#{metricPercentConverter}" />
                                            <h:outputLabel for="metricBaselinePercent" value=" #{messages['alert.config.props.CB.Content.Percent']} " />

                                            <h:selectOneMenu id="metricBaselineBaselineSelection" value="#{alertConditionsUIBean.currentCondition.option}">
                                                <f:selectItems value="#{alertConditionUIBean.baselines}" />
                                            </h:selectOneMenu>
                                        </ui:fragment>


                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'EVENT'}">
                                            <h:outputLabel for="eventSelection" value="#{messages['alert.config.props.CB.Content.EventSeverity']} " />

                                            <h:selectOneMenu id="eventSelection" value="#{alertConditionsUIBean.currentCondition.name}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.severities}" />
                                            </h:selectOneMenu>

                                            <h:outputText value=" #{messages['alert.config.props.CB.Content.Match']}" />
                                            <h:inputText id="eventExpression" value="#{alertConditionsUIBean.currentCondition.option}" />
                                        </ui:fragment>


                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'TRAIT'}">
                                            <h:outputLabel for="traitSelection" value="#{messages['alert.config.props.CB.Content.Trait']} " />

                                            <h:selectOneMenu id="traitSelection" value="#{alertConditionsUIBean.measurementDefinitionId}">
                                                <f:selectItem itemLabel="#{messages['alert.dropdown.SelectOption']}" />
                                                <f:selectItems value="#{alertConditionUIBean.traits}" />
                                            </h:selectOneMenu>

                                            <h:outputText value=" #{messages['alert.config.props.CB.Content.Changes']}" />
                                        </ui:fragment>


                                        <ui:fragment rendered="#{alertConditionsUIBean.currentCondition.category == 'RESOURCE_CONFIG'}">
                                            <h:outputText value="#{messages['alert.config.props.CB.Content.ResourceConfiguration']} " />
                                            <h:outputText value="#{messages['alert.config.props.CB.Content.Changes']}" />
                                        </ui:fragment>

                                    </rich:panel>

                                    <h:commandButton id="categoryOptionOkButton"
                                                   value="OK"
                                                   action="#{alertConditionsUIBean.saveConditions}"
                                                   styleClass="buttonmed"
                                                   style="margin: 5px;">
                                    </h:commandButton>

                                    <h:outputLink id="conditionCancelLink" styleClass="buttonmed" value="#" style="float: right; margin: 5px;">
                                        <h:outputText value="Cancel" />
                                        <rich:componentControl for="categoryModalPanel" attachTo="conditionCancelLink" operation="hide" event="onclick" />
                                    </h:outputLink>
                                </h:form>
                            </f:facet>
                        </a4j:status>

                    </h:panelGrid>

                </rich:panel>
            </rich:modalPanel>

        </ui:define>
    </ui:composition>
</html>
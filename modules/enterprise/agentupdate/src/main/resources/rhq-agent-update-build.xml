<?xml version="1.0" encoding="UTF-8"?>

<project name="rhq-agent-update" default="start" basedir=".">
   
   <!-- the initial target that logs some basic information, then performs the install or update -->
   <target name="start" depends="header, verify, install, update">
   </target>

   <!-- performs a base install - this does not attempt to upgrade an agent; this provisions a fresh new agent -->
   <target name="install" unless="rhq.agent.update.update-flag">
      <unjar src="${rhq.agent.update.jar-file}"
             dest="${basedir}">
         <patternset>
             <include name="rhq-enterprise-agent-${rhq-agent.latest.version}.zip"/>
         </patternset>
      </unjar>
      <unzip src="${basedir}/rhq-enterprise-agent-${rhq-agent.latest.version}.zip"
             dest="${rhq.agent.update.install-agent-dir}"/>
      <delete file="${basedir}/rhq-enterprise-agent-${rhq-agent.latest.version}.zip"
              failonerror="false"/>
      <echo>Agent version ${rhq-agent.latest.version} (build number=${rhq-agent.latest.build-number}) has been installed to ${rhq.agent.update.install-agent-dir}</echo>
   </target>

   <!-- upgrades an existing agent -->
   <target name="update" if="rhq.agent.update.update-flag">
      <!-- we build up the new, updated agent in the update-### subdirectory
           only when we feel we successfully have a complete agent will we attempt to
           move it in the current agent's place -->
      <property name="_update.tmp.dir.name" value="update-${rhq-agent.latest.build-number}" />
      <property name="_update.tmp.dir" location="${rhq.agent.update.update-agent-dir}/${_update.tmp.dir.name}" />
      <unjar src="${rhq.agent.update.jar-file}"
             dest="${_update.tmp.dir}">
         <patternset>
             <include name="rhq-enterprise-agent-${rhq-agent.latest.version}.zip"/>
         </patternset>
      </unjar>
      <unzip src="${_update.tmp.dir}/rhq-enterprise-agent-${rhq-agent.latest.version}.zip"
             dest="${_update.tmp.dir}"/>
      <delete file="${_update.tmp.dir}/rhq-enterprise-agent-${rhq-agent.latest.version}.zip"
              failonerror="false"/>
      
      <!-- at this point, we have the new but raw agent extracted to the ${_update.tmp.dir}/rhq-agent -->

      <!-- if there are plugins, keep them -->
      <copy todir="${_update.tmp.dir}/rhq-agent/plugins">
        <fileset dir="${rhq.agent.update.update-agent-dir}/plugins"/>
      </copy>

      <!-- if there is a failover list, keep it -->
      <copy file="${rhq.agent.update.update-agent-dir}/data/failover-list.dat"
            tofile="${_update.tmp.dir}/rhq-agent/data/failover-list.dat"
            failonerror="false" />

      <!-- copy any custom launch scripts (we are going to lose our UNIX +x permission bits) -->
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/bin"
                        newdir="${_update.tmp.dir}/rhq-agent/bin"
                        filename="rhq-agent-env.bat" keep="old" backupextension=".default" failonerror="false" />
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/bin"
                        newdir="${_update.tmp.dir}/rhq-agent/bin"
                        filename="rhq-agent-env.sh" keep="old" backupextension=".default" failonerror="false" />
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/bin"
                        newdir="${_update.tmp.dir}/rhq-agent/bin"
                        filename="rhq-agent-wrapper.bat" keep="old" backupextension=".default" failonerror="false" />
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/bin"
                        newdir="${_update.tmp.dir}/rhq-agent/bin"
                        filename="rhq-agent-wrapper.sh" keep="old" backupextension=".default" failonerror="false" />
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/bin/wrapper"
                        newdir="${_update.tmp.dir}/rhq-agent/bin/wrapper"
                        filename="rhq-agent-wrapper.conf" keep="old" backupextension=".default" failonerror="false" />

      <!-- copy over the agent-configuration and log4j xml files, but rename them so they do not take effect -->
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/conf"
                        newdir="${_update.tmp.dir}/rhq-agent/conf"
                        filename="agent-configuration.xml" keep="new" backupextension=".custom" failonerror="false" />
      <copy-with-backup olddir="${rhq.agent.update.update-agent-dir}/conf"
                        newdir="${_update.tmp.dir}/rhq-agent/conf"
                        filename="log4j.xml" keep="new" backupextension=".custom" failonerror="false" />
      
      <!-- everything is done; _update.tmp.dir/rhq-agent has our new agent -->
      <!-- start moving things around to get the new agent in the old agent's directory -->
      <property name="new.location.for.old.agent" location="${rhq.agent.update.update-agent-dir}/../rhq-agent-OLD" />
      <delete dir="${new.location.for.old.agent}" />
      <move file="${rhq.agent.update.update-agent-dir}"
            tofile="${new.location.for.old.agent}"
            failonerror="false"/> <!-- do not fail if we fail to backup the old agent - hope we don't need it -->
      <delete dir="${rhq.agent.update.update-agent-dir}" failonerror="false" /> <!-- just trying to clear the way for the new agent -->
      <move file="${new.location.for.old.agent}/${_update.tmp.dir.name}/rhq-agent"
            tofile="${rhq.agent.update.update-agent-dir}"
            failonerror="true"/>
      <delete dir="${new.location.for.old.agent}/${_update.tmp.dir.name}" />
   </target>

   <!-- makes sure the jar file where the agent distro is supposed to be actually exists -->
   <target name="verify">
      <fail message="Could not determine the location of the jar file or it does not exist: ${rhq.agent.update.jar-file}">
         <condition>
            <not>
               <available file="${rhq.agent.update.jar-file}" />
            </not>
         </condition>
      </fail>
   </target>

   <!-- header targets will simply output some information to the console -->
   <target name="header" depends="header-for-update, header-for-install">
   </target>

   <target name="header-for-update" if="rhq.agent.update.update-flag">
      <echo>
===== RHQ AGENT UPDATE =====
Agent To Be Updated: ${rhq.agent.update.update-agent-dir}
Version: ${rhq-agent.latest.version}
Build Number: ${rhq-agent.latest.build-number}
Jar File: ${rhq.agent.update.jar-file}
</echo>
   </target>

   <target name="header-for-install" unless="rhq.agent.update.update-flag">
      <echo>
===== RHQ AGENT INSTALL =====
Installing Agent To: ${rhq.agent.update.install-agent-dir}
Version: ${rhq-agent.latest.version}
Build Number: ${rhq-agent.latest.build-number}
Jar File: ${rhq.agent.update.jar-file}
</echo>
   </target>
</project>
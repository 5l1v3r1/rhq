# The error messages for the Validation Actions
errors.required=The {0} field is required.
errors.int=The {0} field should be an integer.
errors.maxLength=The {0} fields is too long. Should only be {1} characters long.

# The formatted names of the properties
#datasource.jndiName.displayname=JNDI Name

action.label.CreateDataSourceTemplate=Create a DataSource
action.label.ReadDataSource=View this DataSource
action.label.UpdateDataSource=Edit this DataSource
action.label.CreateNoTxDataSource=Create No-Tx DataSource
action.label.CreateLocalTxDataSource=Create Local-Tx DataSource
action.label.CreateXADataSource=Create XA DataSource
action.label.DeleteDataSource=Delete this DataSource
action.label.CreateOracleLocalTxDataSource=Create Oracle Local-Tx DataSource
action.label.CreateOracleXADataSource=Create Oracle XA DataSource
action.label.CreateMySQLLocalTxDataSource=Create MySQL Local-Tx DataSource

jndiName.label=JNDI Name
jndiName.desc=The JNDI name under which the DataSource wrapper will be bound.

connectionUrl.label=Connection URL
connectionUrl.desc=The JDBC driver connection URL string

driverClass.label=Driver Class
driverClass.desc=The fully qualified name of the JDBC driver class.

XADataSourceClass.label=XA DataSource Class
XADataSourceClass.desc=The fully qualified name of the JDBC XA datasource class.

userName.label=User Name
userName.desc=The default username used when creating a new connection.

password.label=Password
password.desc=The default password used when creating a new connection.
         
connectionProperty.label=Connection Properties
connectionProperty.desc=Properties that will get passed in the DriverManager.getConnection(props) call. Look at your Driver docs to see what these might be. Each property should be on a separate line, with the name separated from the value by an equals sign (=).

XADataSourceProperty.label=XA DataSource properties
XADataSourceProperty.desc=Properties used to configure the XADataSource.  Each property should be on a separate line, with the name separated from the value by an equals sign (=).

minPoolSize.label=Minimum Pool Size
minPoolSize.desc=Indicates the minimum number of connections a pool should hold. These are not created until a Subject is known from a request for a connection. If nothing is specified the default of 0 is used.

maxPoolSize.label=Maximum Pool Size
maxPoolSize.desc=Indicates the maximum number of connections for a pool. No more than this number of connections will be created in each sub-pool. If nothing is specified the default of 20 is used.


# TODO need to consider adding action specification validation
# so as to support the more complicated validation needed to check this stuff

securityDomain.label=Security Domain
securityDomain.desc=Indicates Subjects(from security domain) are used to distinguish connections in the pool.  The content of the security domain is the name of the JAAS security manager that will handle authentication. This name correlates to the JAAS login-config.xml descriptor application-policy/name attribute. Must be specified if either Container Based or Container and Applicatin Based authentication types are specified.

authenticationType.label=JCA Pool Type
authenticationType.desc=JBossJCA uses a ManagedConnectionPool to perform the pooling. The ManagedConnectionPool is made up of subpools depending upon the strategy chosen and other pooling parameters. 'Container Based' means a pool per Subject, e.g. preconfigured or EJB/Web login subjects. 'Application Based' means use the connection properties from allocateConnection(). 'Container And Application Based' means a per Subject and connection property combination. The default is just to use a single pool of equivalent connections.
authenticationType.options.label.0=Default
authenticationType.options.label.1=Container Based
authenticationType.options.label.2=Application Based
authenticationType.options.label.3=Container and Application Based

#applicationManagedSecurity.label=Application Managed Security
#applicationManagedSecurity.desc=Application Managed Security

#domainAndApplicationSecurity.label=Domain And Application Security
#domainAndApplicationSecurity.desc=Domain And Application Security



trackStatements.label=Track Statements
trackStatements.desc=Whether to check for unclosed statements when a connection is returned to the pool and result sets are closed when a statement is closed/returned to the prepared statement cache. The default is Yes, but no warnings.
trackStatements.options.label.0=Default
trackStatements.options.label.1=No
trackStatements.options.label.2=Yes
trackStatements.options.label.3=Yes, but no warnings         
         
blockingTimeout.label=Blocking Timeout
blockingTimeout.desc=Indicates the maximum time in milliseconds to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for a permit for a connection, and will never throw an exception if creating a new connection takes an inordinately long time. If nothing is specified the default of 30000 milliseconds is used.

idleTimeout.label=Idle Timeout
idleTimeout.desc=Indicates the maximum time in minutes a connection may be idle before being closed.  The actual maximum time depends also on the IdleRemover scan time, which is 1/2 the smallest idle-timeout-minutes of any pool. If nothing is specified the default of 15 minutes is used.
         
newConnectionSQL.label=New Connection SQL
newConnectionSQL.desc=Specify an SQL statement to execute whenever a connection is added to the connection pool.

checkValidConnectionSQL.label=Check Valid Connection SQL
checkValidConnectionSQL.desc=Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is taken from pool for use.

validConnectionChecker.label=Valid Connection Checker
validConnectionChecker.desc=An org.jboss.resource.adapter.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate is a connection is valid. An exception means the connection is destroyed. This overrides the check-valid-connection-sql when present.

exceptionSorter.label=Exception Sorter
exceptionSorter.desc=An org.jboss.resource.adapter.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate is an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred message.

preparedStatementCacheSize.label=Prepared Statement Cache Size
preparedStatementCacheSize.desc=The number of prepared statements per connection in an LRU cache.

useJavaContext.label=Use Java Context
useJavaContext.desc=Indicates if the JNDI name should be prefixed with java: which causes the DataSource to only be accessible from within the jboss server vm. The default is Yes.
useJavaContext.options.label.0=Default
useJavaContext.options.label.1=Yes
useJavaContext.options.label.2=No

transactionIsolation.label=Transaction Isolation
transactionIsolation.desc=The Transaction Isolation level. The default setting is to use whichever isolation level is provided by default by the database.
transactionIsolation.options.label.0=Default
transactionIsolation.options.label.1=TRANSACTION NONE
transactionIsolation.options.label.2=TRANSACTION READ COMMITTED
transactionIsolation.options.label.3=TRANSACTION READ UNCOMMITTED
transactionIsolation.options.label.4=TRANSACTION REPEATABLE READ
transactionIsolation.options.label.5=TRANSACTION SERIALIZABLE  

noTxSeparatePools.label=No Tx Separate Pools
noTxSeparatePools.desc=Whether to use separate pools for connections retrieved in a transaction and those retrieved outside a transaction. The default is Yes.
noTxSeparatePools.options.label.0=Default
noTxSeparatePools.options.label.1=Yes
noTxSeparatePools.options.label.2=No


trackConnectionByTx.label=Track Connection By Tx
trackConnectionByTx.desc=Whether the connection should be "locked" to the transaction, returning it to the pool at the end of the transaction. The default is No.
trackConnectionByTx.options.label.0=Default
trackConnectionByTx.options.label.1=Yes
trackConnectionByTx.options.label.2=No


isSameRMOverrideValue.label=isSameRM Override Value 
isSameRMOverrideValue.desc=Allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false. The default is not to override the return value.
isSameRMOverrideValue.options.label.0=Default
isSameRMOverrideValue.options.label.1=true
isSameRMOverrideValue.options.label.2=false

dataSourceTemplates.label=DataSource Templates
dataSourceTemplates.desc=The DataSource types for which Create/Read templates are available 
dataSourceTemplates.options.label.0=Generic XA DataSource
dataSourceTemplates.options.label.1=Generic Local Tx DataSource
dataSourceTemplates.options.label.2=Generic No Tx DataSource
dataSourceTemplates.options.label.3=MySQL Local Tx DataSource
dataSourceTemplates.options.label.4=Oracle XA DataSource
dataSourceTemplates.options.label.5=Oracle Local Tx DataSource

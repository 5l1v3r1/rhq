# =====================================================================
# RHQ Server JDK Logging Configuration                            
# =====================================================================

# Properties file which configures the operation of the JDK logging
# facility. This allows us to configure logging for 3rd-party libraries
# that do not use Commons Logging or Log4J (e.g. the JSF RI and 
# Facelets).

# The system will look for this config file, first using a System
# property specified at startup, e.g.:
#
#    >java -Djava.util.logging.config.file=myLoggingConfigFilePath
#
# If this property is not specified, then the config file is retrieved
# from its default location at:
#
#    JDK_HOME/jre/lib/logging.properties

# Global Logging Properties
# ------------------------------------------
# The set of handlers to be loaded upon startup. Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level. Loggers and Handlers may override this level.
# For list of defined levels, see http://java.sun.com/j2se/1.5.0/docs/api/java/util/logging/Level.html
.level = INFO

# Loggers
# ------------------------------------------
# Here, the level for each logger is specified. Loggers are usually, 
# though not always, attached to packages. The global level is used by
# default, so levels specified here simply act as overrides.

# JSF API - i.e. javax.faces.*
javax.faces.level = WARNING

# JSF RI - i.e. com.sun.faces.*
javax.enterprise.resource.webcontainer.jsf.level = WARNING

# Facelets - i.e. com.sun.facelets.*
facelets.level = WARNING

# Handlers
# -----------------------------------------

# ===== ConsoleHandler =====
# For syntax, see http://java.sun.com/j2se/1.5.0/docs/api/java/util/logging/ConsoleHandler.html

# Override of global logging level
java.util.logging.ConsoleHandler.level = SEVERE

# Style of output (Simple or XML):
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# ===== FileHandler =====
# For syntax, see http://java.sun.com/j2se/1.5.0/docs/api/java/util/logging/FileHandler.html

# Override of global logging level
java.util.logging.FileHandler.level = WARNING

# Style of output (simple or XML):
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter 

# Output file path:
# i.e.: /home/rhq-server.log
# we use ../.. because we normally run out of the /jbossas/bin directory and our logs are at /logs
java.util.logging.FileHandler.pattern = ../../logs/rhq-server-jdklog.log

# Limit on size of output file, in bytes:
java.util.logging.FileHandler.limit = 5000000

# Number of output files to cycle through, by appending an
# integer to the base file name:
java.util.logging.FileHandler.count = 1

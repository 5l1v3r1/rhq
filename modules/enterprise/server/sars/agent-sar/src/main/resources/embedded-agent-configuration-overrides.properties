# name of the embedded agent
rhq.agent.name=${rhq.server.embedded-agent.name:}
# the agent's server will point to the location of the server where it is embedded
rhq.agent.server.transport=${rhq.communications.connector.transport:servlet}
rhq.agent.server.bind-address=${rhq.communications.connector.bind-address}
rhq.agent.server.bind-port=${rhq.communications.connector.bind-port}
rhq.agent.server.transport-params=${rhq.communications.connector.transport-params:/jboss-remoting-servlet-invoker/ServerInvokerServlet}
# the binding address/port for the agent's server socket
rhq.communications.connector.bind-address=${rhq.communications.connector.bind-address}
rhq.communications.connector.bind-port=${rhq.server.embedded-agent.bind-port:26163}
# location where data files can be stored
rhq.agent.data-directory=${jboss.server.data.dir}/embedded-agent
# location of the plugins
rhq.agent.plugins.directory=${rhq.server.home}/modules/org/rhq/rhq-enterprise-server-startup-subsystem/main/deployments/rhq.ear/rhq-downloads/rhq-plugins
# Client-side SSL Security Configuration (for sending messages to the server)
rhq.agent.client.security.secure-socket-protocol=${rhq.communications.connector.security.secure-socket-protocol:TLS}
rhq.agent.client.security.keystore.file=${rhq.communications.connector.security.keystore.file}
rhq.agent.client.security.keystore.algorithm=${rhq.communications.connector.security.keystore.algorithm:SunX509}
rhq.agent.client.security.keystore.type=${rhq.communications.connector.security.keystore.type:JKS}
rhq.agent.client.security.keystore.password=${rhq.communications.connector.security.keystore.password:rhqpwd}
rhq.agent.client.security.keystore.key-password=${rhq.communications.connector.security.keystore.key-password:rhqpwd}
rhq.agent.client.security.keystore.alias=${rhq.communications.connector.security.keystore.alias:rhq}
rhq.agent.client.security.truststore.file=${rhq.communications.connector.security.truststore.file}
rhq.agent.client.security.truststore.algorithm=${rhq.communications.connector.security.truststore.algorithm:SunX509}
rhq.agent.client.security.truststore.type=${rhq.communications.connector.security.truststore.type:JKS}
rhq.agent.client.security.truststore.password=${rhq.communications.connector.security.truststore.password}
rhq.agent.client.security.server-auth-mode-enabled=${rhq.server.client.security.server-auth-mode-enabled:false}
# indicate if you do not want the native system to be used by the embedded agent
rhq.agent.disable-native-system=${rhq.server.embedded-agent.disable-native-system:false}

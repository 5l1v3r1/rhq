<?xml version="1.0" encoding="UTF-8"?>
<server xmlns="urn:jboss:service:7.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:jboss:service:7.0 jboss-service_7_0.xsd">

    <mbean code="org.rhq.enterprise.server.core.CustomJaasDeploymentService"
           name="rhq:service=CustomJaasDeployment">
    </mbean>    
    
    <mbean code="org.rhq.enterprise.server.core.CoreServer"
           name="rhq:service=CoreServer" />

    <mbean code="org.rhq.enterprise.server.measurement.instrumentation.MeasurementMonitor"
           name="rhq:service=MeasurementMonitor" />

    <mbean code="org.rhq.enterprise.server.alert.engine.mbean.AlertConditionCacheMonitor"
           name="rhq:service=AlertConditionCacheMonitor" />

    <mbean code="org.rhq.enterprise.server.resource.group.definition.mbean.GroupDefinitionRecalculationThreadMonitor"
           name="rhq:service=GroupDefinitionRecalculationThreadMonitor" />

    <mbean code="org.rhq.enterprise.server.core.plugin.PluginDeploymentScanner"
           name="rhq:service=PluginDeploymentScanner">
        <attribute name="ScanPeriod">${rhq.server.plugin-scan-period-ms:300000}</attribute>
        <attribute name="AgentPluginDir">${jboss.home.dir}/standalone/deployments/${rhq.earName}/rhq-downloads/rhq-plugins</attribute>
        <attribute name="ServerPluginDir">${jboss.home.dir}/standalone/deployments/${rhq.earName}/rhq-serverplugins</attribute>
        <attribute name="UserPluginDir">${jboss.home.dir}/../plugins</attribute>
    </mbean>

    <mbean code="org.rhq.enterprise.server.scheduler.SchedulerService"
           name="rhq:service=scheduler">
        <attribute name="QuartzProperties">
# RHQ custom property that defines the default timeout for all operations.
# This is specified in seconds.  If any operation takes longer than this, it is assumed to have failed.
rhq.server.operation-timeout = ${rhq.server.operation-timeout:600}

# scheduler factory config
org.quartz.scheduler.instanceName = RHQScheduler
org.quartz.scheduler.instanceId   = AUTO

# thread pool config
org.quartz.threadPool.class       = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 5

# database config
# note that the delegate class property should be set at build/installation time
org.quartz.jobStore.class                      = org.quartz.impl.jdbcjobstore.JobStoreCMT
org.quartz.jobStore.driverDelegateClass        = ${rhq.server.quartz.driverDelegateClass}
org.quartz.jobStore.isClustered                = true
org.quartz.jobStore.clusterCheckinInterval     = 30000
org.quartz.jobStore.tablePrefix                = RHQ_QRTZ_
org.quartz.jobStore.useProperties              = true
org.quartz.jobStore.selectWithLockSQL          = ${rhq.server.quartz.selectWithLockSQL}
org.quartz.jobStore.dataSource                 = RHQDS
org.quartz.dataSource.RHQDS.jndiURL            = java:jboss/datasources/RHQDS
org.quartz.dataSource.RHQDS.maxConnections     = 10
org.quartz.jobStore.nonManagedTXDataSource     = NoTxRHQDS
org.quartz.dataSource.NoTxRHQDS.jndiURL        = java:jboss/datasources/NoTxRHQDS
org.quartz.dataSource.NoTxRHQDS.maxConnections = 10
org.quartz.jobStore.lockHandler.class          = ${rhq.server.quartz.lockHandlerClass}
        </attribute>
    </mbean>

    <mbean code="org.rhq.enterprise.server.core.comm.ServerCommunicationsService"
           name="rhq:service=ServerCommunications">

        <!-- see https://issues.jboss.org/browse/AS7-5342 for why we have two attributes instead of just one-->
        <attribute name="ConfigurationOverrides">
# location of the plugin jars and other files agents can download directly from sever
rhq.server.agent-files-directory=${jboss.home.dir}/standalone/deployments/${rhq.earName}/rhq-downloads
# location where data files can be stored
rhq.communications.data-directory=${jboss.server.data.dir}
# global limit on number of concurrent incoming messages allowed
rhq.communications.global-concurrency-limit=${rhq.communications.global-concurrency-limit:200}
# Server's remote endpoint for agents to talk to
rhq.communications.connector.transport=${rhq.communications.connector.transport:servlet}
rhq.communications.connector.bind-address=${rhq.communications.connector.bind-address}
rhq.communications.connector.bind-port=${rhq.communications.connector.bind-port:7080}
rhq.communications.connector.transport-params=${rhq.communications.connector.transport-params:/jboss-remoting-servlet-invoker/ServerInvokerServlet}
# Multicast detector configuration for auto-discovery
rhq.communications.multicast-detector.enabled=${rhq.communications.multicast-detector.enabled:false}
rhq.communications.multicast-detector.multicast-address=${rhq.communications.multicast-detector.multicast-address:224.16.16.16}
rhq.communications.multicast-detector.bind-address=${rhq.communications.multicast-detector.bind-address}
rhq.communications.multicast-detector.port=${rhq.communications.multicast-detector.port:16162}
        </attribute>

        <attribute name="ConfigurationOverrides2">
# Server-side SSL Security Configuration (for incoming messages from agents)
rhq.communications.connector.security.secure-socket-protocol=${rhq.communications.connector.security.secure-socket-protocol:TLS}
rhq.communications.connector.security.keystore.file=${rhq.communications.connector.security.keystore.file}
rhq.communications.connector.security.keystore.algorithm=${rhq.communications.connector.security.keystore.algorithm:SunX509}
rhq.communications.connector.security.keystore.type=${rhq.communications.connector.security.keystore.type:JKS}
rhq.communications.connector.security.keystore.password=${rhq.communications.connector.security.keystore.password:rhqpwd}
rhq.communications.connector.security.keystore.key-password=${rhq.communications.connector.security.keystore.key-password:rhqpwd}
rhq.communications.connector.security.keystore.alias=${rhq.communications.connector.security.keystore.alias:rhq}
rhq.communications.connector.security.truststore.file=${rhq.communications.connector.security.truststore.file}
rhq.communications.connector.security.truststore.algorithm=${rhq.communications.connector.security.truststore.algorithm:SunX509}
rhq.communications.connector.security.truststore.type=${rhq.communications.connector.security.truststore.type:JKS}
rhq.communications.connector.security.truststore.password=${rhq.communications.connector.security.truststore.password}
rhq.communications.connector.security.client-auth-mode=${rhq.communications.connector.security.client-auth-mode:none}
# Client-side SSL Security Configuration (for outgoing messages to agents)
rhq.server.client.security.secure-socket-protocol=${rhq.server.client.security.secure-socket-protocol:TLS}
rhq.server.client.security.keystore.file=${rhq.server.client.security.keystore.file}
rhq.server.client.security.keystore.algorithm=${rhq.server.client.security.keystore.algorithm:SunX509}
rhq.server.client.security.keystore.type=${rhq.server.client.security.keystore.type:JKS}
rhq.server.client.security.keystore.password=${rhq.server.client.security.keystore.password:rhqpwd}
rhq.server.client.security.keystore.key-password=${rhq.server.client.security.keystore.key-password:rhqpwd}
rhq.server.client.security.keystore.alias=${rhq.server.client.security.keystore.alias:rhq}
rhq.server.client.security.truststore.file=${rhq.server.client.security.truststore.file}
rhq.server.client.security.truststore.algorithm=${rhq.server.client.security.truststore.algorithm:SunX509}
rhq.server.client.security.truststore.type=${rhq.server.client.security.truststore.type:JKS}
rhq.server.client.security.truststore.password=${rhq.server.client.security.truststore.password}
rhq.server.client.security.server-auth-mode-enabled=${rhq.server.client.security.server-auth-mode-enabled:false}
        </attribute>
    </mbean>
    
    <mbean code="org.rhq.enterprise.server.plugin.pc.ServerPluginService"
           name="rhq:service=ServerPluginService" />
    
</server>

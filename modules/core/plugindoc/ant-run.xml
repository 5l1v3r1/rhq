<?xml version="1.0" encoding="UTF-8"?>

<project name="plugindoc" default="package-dist" basedir=".">

   <!-- in case these weren't passed in (i.e. not invoked via maven), assume some defaults -->
   <property name="settings.localRepository" location="${user.home}/.m2/repository"/>
   <property name="project.version" value="1.3.0-SNAPSHOT"/>

   <!--
   =======================================================================
   Contains some path elements needed to run
   =======================================================================
   -->
   <path id="run.classpath">
      <!-- include our own thirdparty libraries -->
      <fileset dir="${settings.localRepository}" id="run.classpath.fileset">
         <include name="org/rhq/rhq-core-domain/${rhq-core-domain.version}/rhq-core-domain-${rhq-core-domain.version}.jar" />
         <include name="org/rhq/rhq-core-client-api/${rhq-core-client-api.version}/rhq-core-client-api-${rhq-core-client-api.version}.jar" />
         <include name="commons-logging/commons-logging/1.1.0.jboss/commons-logging-1.1.0.jboss.jar" />
         <include name="commons-collections/commons-collections/3.2/commons-collections-3.2.jar" />
         <include name="commons-lang/commons-lang/2.4/commons-lang-2.4.jar" />
         <include name="oro/oro/2.0.7/oro-2.0.7.jar" />
         <include name="hibernate-annotations/hibernate-annotations/3.2.1.GA/hibernate-annotations-3.2.1.GA.jar" />
         <include name="javax/persistence/persistence-api/1.0/persistence-api-1.0.jar" />
         <include name="org/apache/maven/maven-plugin-api/2.0.8/maven-plugin-api-2.0.8.jar" />
         <include name="org/apache/maven/maven-project/2.0.8/maven-project-2.0.8.jar" />
         <include name="org/apache/velocity/velocity/1.6.2/velocity-1.6.2.jar" />
         <include name="org/codehaus/swizzle/swizzle-confluence/1.2.Alpha1/swizzle-confluence-1.2.Alpha1.jar" />
         <include name="org/rhq/rhq-core-plugindoc/${project.version}/rhq-core-plugindoc-${project.version}.jar" />
      </fileset>

   </path>

   <!--
   =======================================================================
   -->
   <target name="package-dist">
      <echo>Running ant package-dist</echo>
      <!-- do not put our distro in a directory with a specific version in the name! -->
      <property name="plugindoc.distro.dir" location="${basedir}/target/plugindoc"/>

      <copy todir="${plugindoc.distro.dir}/bin">
         <fileset dir="${basedir}/src/etc"
                  includes="*.bat,*.sh"/>
      </copy>
      <chmod dir="${plugindoc.distro.dir}/bin" perm="ug+rx" includes="*.sh"/>

      <copy todir="${plugindoc.distro.dir}/lib"
            flatten="true">
         <fileset refid="run.classpath.fileset" />
      </copy>

      <move todir="${plugindoc.distro.dir}/lib" flatten="true" overwrite="false">
         <fileset dir="${plugindoc.distro.dir}/lib">
            <include name="**/lib/*" />
         </fileset>
      </move>

      <copy todir="${plugindoc.distro.dir}/conf">
         <fileset dir="${basedir}/src/main/resources">
            <include name="common-macros.vm"/>
            <include name="confluence-macros.vm"/>
            <include name="docbook-macros.vm"/>
            <include name="resource-type-doc-confluence.vm"/>
            <include name="resource-type-doc-docbook.vm"/>
            <include name="plugindoc.properties"/>
         </fileset>
      </copy>

      <delete file="${basedir}/target/rhq-core-plugindoc-${project.version}.zip" />
      <zip destfile="${basedir}/target/rhq-core-plugindoc-${project.version}.zip" >
         <!-- The zip task does not mantain file permissions, we have to make sure they are set here -->
         <zipfileset dir="${basedir}/target">
            <include name="plugindoc/**"/>
         </zipfileset>
      </zip>

      <mkdir dir="${settings.localRepository}/org/rhq/rhq-core-plugindoc/${project.version}"/>
      <copy file="${basedir}/target/rhq-core-plugindoc-${project.version}.zip"
            tofile="${settings.localRepository}/org/rhq/rhq-core-plugindoc/${project.version}/rhq-core-plugindoc-${project.version}.zip"
            verbose="true"/>

   </target>

</project>

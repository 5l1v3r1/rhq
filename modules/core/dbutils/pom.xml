<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-parent</artifactId>
      <version>3.0.0-SNAPSHOT</version>
   </parent>

  <groupId>org.rhq</groupId>
  <artifactId>rhq-core-dbutils</artifactId>
  <packaging>jar</packaging>

  <name>RHQ Database Utilities</name>
  <description>Database schema setup, upgrade and other utilities</description>

  <scm>
    <connection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/core/dbutils</connection>
    <developerConnection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/core/dbutils</developerConnection>
  </scm>

  <properties>
    <scm.module.path>modules/core/dbutils/</scm.module.path>
    <db.schema.version>2.85</db.schema.version>

    <dbutils.mode>latest</dbutils.mode>
    
    <!-- 
      The rhq.db property determines which database profile to use. Possible
      values include dev, test, upgrade
    -->
    <rhq.db>dev</rhq.db>
    <rhq.ds.connection-url>jdbc:postgresql://127.0.0.1:5432/${rhq.db.name}</rhq.ds.connection-url>
    <rhq.ds.driver-class>org.postgresql.Driver</rhq.ds.driver-class>
    <rhq.ds.xa-datasource-class>org.postgresql.xa.PGXADataSource</rhq.ds.xa-datasource-class>
    <rhq.ds.user-name>rhqadmin</rhq.ds.user-name>
    <rhq.ds.password>rhqadmin</rhq.ds.password>
    <rhq.ds.password.encrypted>1eeb2f255e832171df8592078de921bc</rhq.ds.password.encrypted>
    <rhq.ds.type-mapping>PostgreSQL</rhq.ds.type-mapping>
    <rhq.ds.server-name>127.0.0.1</rhq.ds.server-name>
    <rhq.ds.port>5432</rhq.ds.port>
    <rhq.ds.db-name>rhqdev</rhq.ds.db-name>
    <rhq.ds.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect</rhq.ds.hibernate-dialect>
    <rhq.quartz.driverDelegateClass>org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</rhq.quartz.driverDelegateClass>
    <rhq.quartz.selectWithLockSQL>SELECT * FROM {0}LOCKS ROWLOCK WHERE LOCK_NAME = ? FOR UPDATE</rhq.quartz.selectWithLockSQL>
    <rhq.quartz.lockHandlerClass>org.quartz.impl.jdbcjobstore.StdRowLockSemaphore</rhq.quartz.lockHandlerClass>
  </properties>

  <dependencies>

    <!-- 3rd Party Deps -->

    <dependency>
      <groupId>ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.6.5</version>
    </dependency>

    <dependency>
      <groupId>ant</groupId>
      <artifactId>ant-launcher</artifactId>
      <version>1.6.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.sourceforge.jtds</groupId>
      <artifactId>jtds</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.0</version>
        <dependencies>
          <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                import org.postgresql.Driver
                import groovy.sql.Sql

                if (!project.properties.dbreset) {
                  return
                }

		database = project.properties['rhq.db.name']    
                project.properties.dbsetup = 'true'

                sql = Sql.newInstance(
                    "jdbc:postgresql://127.0.0.1:5432/postgres",
                    "postgres",
                    "postgres",
                    "org.postgresql.Driver")

                sql.execute("drop database if exists ${Sql.expand(database)};")
                log.info("dropped database $database")
                sql.execute("create database ${Sql.expand(database)} with owner rhqadmin;")
                log.info("created database $database")
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>DatabaseTest.nofail</name>
              <value>${DatabaseTest.nofail}</value>
            </property>
            <property>
              <name>AntDatabaseTest.test-resources</name>
              <value>${basedir}/src/test/resources</value>
            </property>
          </systemProperties>
          <!-- The below is required for tests to run against Oracle. -->
          <additionalClasspathElements>
            <additionalClasspathElement>${settings.localRepository}/com/oracle/ojdbc5/${ojdbc5.version}/ojdbc5-${ojdbc5.version}.jar</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>
      </plugin>

    </plugins>
  </build>

   <profiles>
      <profile>
         <id>latest</id>
	 <activation>
            <activeByDefault>true</activeByDefault>
            <property>
	       <name>dbutils.mode</name>
	       <value>latest</value>
	    </property>
	 </activation>

	 <build>
            <plugins>
	       <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>process-classes</phase>
                        <configuration>
                           <tasks>
                              <!-- generate the I18N resource bundles -->
                              <taskdef name="i18n" classpathref="maven.runtime.classpath" classname="mazz.i18n.ant.I18NAntTask" />

                              <i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" append="false" verify="true">
                              <classpath refid="maven.runtime.classpath" />
                              <classfileset dir="${project.build.outputDirectory}">
                                 <include name="**/*I18NResourceKeys.class" />
                              </classfileset>
                           </i18n>
                       </tasks>
                    </configuration>
                    <goals>
                       <goal>run</goal>
                   </goals>
                </execution>

                <execution>
                   <id>dbsetup-worker</id>
                   <phase>test</phase>
                   <configuration>
                      <tasks>
                         <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml">
                            <property name="settings.localRepository" value="${settings.localRepository}" />
                            <property name="ojdbc5.version" value="${ojdbc5.version}" />
                            <property name="postgresql.version" value="${postgresql.version}" />
                            <property name="h2.version" value="${h2.version}" />
                            <property name="jtds.version" value="${jtds.version}" />
                            <property name="task.classpath.property" refid="maven.test.classpath" />
                            <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                            <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                            <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                            <property name="rhq.ds.password" value="${rhq.ds.password}" />
                            <property name="project.version" value="${project.version}" />
                            <property name="db.schema.version" value="${db.schema.version}" />
                            <property name="dbsetup" value="${dbsetup}" />
                            <property name="dbsetup-uninstall" value="${dbsetup-uninstall}" />
                            <property name="dbsetup-upgrade" value="${dbsetup-upgrade}" />
                            <property name="dbsetup-export" value="${dbsetup-export}" />
                         </ant>
                      </tasks>
                   </configuration>
                   <goals>
                      <goal>run</goal>
                  </goals>
               </execution>

               <execution>
                  <id>generate-dbsetup-dbupgrade-xml-files</id>
                  <phase>process-classes</phase>
                  <configuration>
                     <tasks>
                        <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml" target="dbsetup-combine">
                           <property name="settings.localRepository" value="${settings.localRepository}" />
                           <property name="ojdbc5.version" value="${ojdbc5.version}" />
                           <property name="postgresql.version" value="${postgresql.version}" />
                           <property name="h2.version" value="${h2.version}" />
                           <property name="jtds.version" value="${jtds.version}" />
                           <property name="task.classpath.property" refid="maven.test.classpath" />
                           <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                           <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                           <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                           <property name="rhq.ds.password" value="${rhq.ds.password}" />
                           <property name="project.version" value="${project.version}" />
                           <property name="db.schema.version" value="${db.schema.version}" />
                       </ant>
                    </tasks>
                 </configuration>
                 <goals>
                    <goal>run</goal>
                </goals>
             </execution>
   
             <execution>
               <!--
                  This execution will abort the build if the database schema is not up to date.
                  If you want the build to continue, regardless of your currently installed schema,
                  then pass -Ddbsetup-do-not-check-schema to the mvn command line.
               -->
               <id>test-db-schema-version</id>
               <phase>test</phase>
            <configuration>
              <tasks>
                <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml" target="dbsetup-check-schema">
                  <property name="settings.localRepository" value="${settings.localRepository}" />
                  <property name="ojdbc5.version" value="${ojdbc5.version}" />
                  <property name="postgresql.version" value="${postgresql.version}" />
                  <property name="h2.version" value="${h2.version}" />
                  <property name="jtds.version" value="${jtds.version}" />
                  <property name="task.classpath.property" refid="maven.test.classpath" />
                  <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                  <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                  <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                  <property name="rhq.ds.password" value="${rhq.ds.password}" />
                  <property name="project.version" value="${project.version}" />
                  <property name="db.schema.version" value="${db.schema.version}" />
                  <property name="rhq.ds.driver-class" value="${rhq.ds.driver-class}" />
                  <property name="dbsetup-do-not-check-schema" value="${dbsetup-do-not-check-schema}" />
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
	    </plugins>
	 </build>
      </profile>

      <profile>
         <id>release</id>
	 <activation>
            <property>
	       <name>dbutils.mode</name>
	       <value>release</value>
	    </property>
	 </activation>
	 <build>
            <plugins>
	       <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                       <id>generate-schema</id>
	               <phase>test</phase>
	               <configuration>
                          <tasks>
                             <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml" target="create-release-schema">
                                <property name="settings.localRepository" value="${settings.localRepository}" />
                                <property name="ojdbc5.version" value="${ojdbc5.version}" />
                                <property name="postgresql.version" value="${postgresql.version}" />
                                <property name="h2.version" value="${h2.version}" />
                                <property name="jtds.version" value="${jtds.version}" />
                                <property name="task.classpath.property" refid="maven.test.classpath" />
                                <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                                <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                                <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                                <property name="rhq.ds.password" value="${rhq.ds.password}" />
                                <property name="project.version" value="${project.version}" />
                                <property name="db.schema.version" value="${db.schema.version}" />
				<property name="release" value="${release}"/>
                             </ant>
                          </tasks>
            	       </configuration>
           	       <goals>
                          <goal>run</goal>
	               </goals>
         	     </execution>
                  </executions>
               </plugin>
	    </plugins>
         </build>
      </profile>

      <profile>
         <id>dev</id>

         <properties>
            <rhq.rootDir>../../..</rhq.rootDir>
            <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
            <rhq.deploymentDir>${rhq.containerDir}/jbossas/server/default/deploy/${rhq.earName}/lib</rhq.deploymentDir>
         </properties>

         <build>
           <plugins>

               <plugin>
                 <artifactId>maven-antrun-plugin</artifactId>
                 <version>1.1</version>
                 <executions>

                     <execution>
                        <id>deploy</id>
                        <phase>compile</phase>
                        <configuration>
                          <tasks>
                            <mkdir dir="${rhq.deploymentDir}" />
                            <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                            <echo>*** Updating ${deployment.file}...</echo>
                            <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}" />
                          </tasks>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>undeploy</id>
                        <phase>clean</phase>
                        <configuration>
                          <tasks>
                            <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                            <echo>*** Deleting ${deployment.file}...</echo>
                            <delete file="${deployment.file}" />
                          </tasks>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>

                   </executions>
               </plugin>

           </plugins>
         </build>
      </profile>

      <profile>
         <id>rhq-dev-db</id>
	 <activation>
            <activeByDefault>true</activeByDefault>
            <property>
               <name>rhq.db</name>
	       <value>dev</value>
	    </property>
	 </activation>  
	 <properties>
            <rhq.db.name>rhqdev</rhq.db.name>
         </properties>
      </profile>

      <profile>
         <id>rhq-test-db</id>
	 <activation>
            <property>
               <name>rhq.db</name>
	       <value>test</value>
	    </property>
	 </activation>  
	 <properties>
            <rhq.db.name>rhq</rhq.db.name>
		 <!--
             <rhq.ds.connection-url>jdbc:postgresql://127.0.0.1:5432/rhq</rhq.ds.connection-url>
             <rhq.ds.driver-class>org.postgresql.Driver</rhq.ds.driver-class>
             <rhq.ds.xa-datasource-class>org.postgresql.xa.PGXADataSource</rhq.ds.xa-datasource-class>
             <rhq.ds.user-name>rhqadmin</rhq.ds.user-name>
             <rhq.test.ds.password>rhqadmin</rhq.test.ds.password>
    <rhq.test.ds.type-mapping>PostgreSQL</rhq.test.ds.type-mapping>
    <rhq.test.ds.server-name>127.0.0.1</rhq.test.ds.server-name>
    <rhq.test.ds.port>5432</rhq.test.ds.port>
    <rhq.test.ds.db-name>rhq</rhq.test.ds.db-name>
    <rhq.test.ds.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect</rhq.test.ds.hibernate-dialect>
    <rhq.test.quartz.driverDelegateClass>org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</rhq.test.quartz.driverDelegateClass>
    <rhq.test.quartz.selectWithLockSQL>SELECT * FROM {0}LOCKS ROWLOCK WHERE LOCK_NAME = ? FOR UPDATE</rhq.test.quartz.selectWithLockSQL>
    <rhq.test.quartz.lockHandlerClass>org.quartz.impl.jdbcjobstore.StdRowLockSemaphore</rhq.test.quartz.lockHandlerClass>
    -->
	 </properties>
      </profile>

      <profile>
         <id>rhq-upgrade-db</id>
	 <activation>
            <property>
               <name>rhq.db</name>
	       <value>upgrade</value>
	    </property>
	 </activation>  
	 <properties>
            <rhq.db.name>rhqupgrade</rhq.db.name>
	 </properties>
      </profile>

   </profiles>

</project>


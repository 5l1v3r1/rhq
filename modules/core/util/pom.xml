<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-core-parent</artifactId>
    <version>4.13.0-SNAPSHOT</version>
  </parent>

  <artifactId>rhq-core-util</artifactId>
  <version>4.13.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>RHQ Utilities</name>
  <description>generic utility classes for use by any RHQ module</description>

  <properties>
     <rhq.internal>false</rhq.internal>
  </properties>

  <dependencies>
    <!-- Used by the (deprecated) legacy XML parser, which is used to parse RHQ license files. -->
    <dependency>
      <groupId>jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>

    <dependency>
      <groupId>i18nlog</groupId>
      <artifactId>i18nlog</artifactId>
    </dependency>

      <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>test-utils</artifactId>
          <version>${project.parent.version}</version>
          <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.picketbox</groupId>
      <artifactId>picketbox</artifactId>
      <version>${picketbox.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
    </dependency>

    <!-- test deps -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-testng</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <configuration>
              <target>
                <!-- generate the I18N resource bundles -->
                <taskdef name="i18n" classpathref="maven.compile.classpath" classname="mazz.i18n.ant.I18NAntTask" />

                <i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" append="false" verify="true">
                   <classpath refid="maven.runtime.classpath" />
                   <classfileset dir="${project.build.outputDirectory}">
                      <include name="**/*.class" />
                   </classfileset>
                </i18n>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

   <profiles>

     <profile>
       <id>dev</id>

       <properties>
         <rhq.rootDir>../../..</rhq.rootDir>
         <rhq.containerDir>${rhq.rootDir}/${rhq.devContainerServerPath}</rhq.containerDir>
         <rhq.deploymentDir>${rhq.containerDir}/${rhq.earLibDir}</rhq.deploymentDir>
         <rhq.agentContainerDir>${rhq.rootDir}/${rhq.devContainerAgentPath}</rhq.agentContainerDir>
         <rhq.agentDeploymentDir>${rhq.agentContainerDir}/lib</rhq.agentDeploymentDir>
       </properties>

       <build>
         <plugins>

           <plugin>
             <artifactId>maven-antrun-plugin</artifactId>
             <executions>

               <execution>
                 <id>deploy</id>
                 <phase>compile</phase>
                 <configuration>
                   <target>
                     <mkdir dir="${rhq.deploymentDir}" />
                     <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                     <echo>*** Updating ${deployment.file}...</echo>
                     <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}" />
                   </target>
                 </configuration>
                 <goals>
                   <goal>run</goal>
                 </goals>
               </execution>

               <execution>
                 <id>deployagent</id>
                 <phase>compile</phase>
                 <configuration>
                   <target>
                     <mkdir dir="${rhq.agentDeploymentDir}" />
                     <property name="deployment.file" location="${rhq.agentDeploymentDir}/${project.build.finalName}.jar" />
                     <echo>*** Updating ${deployment.file}...</echo>
                     <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}" />
                   </target>
                 </configuration>
                 <goals>
                   <goal>run</goal>
                 </goals>
               </execution>

               <execution>
                 <id>deploy-jar-meta-inf</id>
                 <phase>package</phase>
                 <configuration>
                   <target>
                     <property name="deployment.file" location="${rhq.agentDeploymentDir}/${project.build.finalName}.jar" />
                     <echo>*** Updating META-INF dir in ${deployment.file}...</echo>
                     <unjar src="${project.build.directory}/${project.build.finalName}.jar" dest="${project.build.outputDirectory}">
                       <patternset><include name="META-INF/**" /></patternset>
                     </unjar>
                     <jar destfile="${deployment.file}" manifest="${project.build.outputDirectory}/META-INF/MANIFEST.MF" update="true">
                     </jar>
                   </target>
                 </configuration>
                 <goals>
                   <goal>run</goal>
                 </goals>
               </execution>

               <execution>
                 <id>undeploy</id>
                 <phase>clean</phase>
                 <configuration>
                   <target>
                     <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                     <echo>*** Deleting ${deployment.file}...</echo>
                     <delete file="${deployment.file}" />
                   </target>
                 </configuration>
                 <goals>
                   <goal>run</goal>
                 </goals>
               </execution>

               <execution>
                 <id>undeployagent</id>
                 <phase>clean</phase>
                 <configuration>
                   <target>
                     <property name="deployment.file" location="${rhq.agentDeploymentDir}/${project.build.finalName}.jar" />
                     <echo>*** Deleting ${deployment.file}...</echo>
                     <delete file="${deployment.file}" />
                   </target>
                 </configuration>
                 <goals>
                   <goal>run</goal>
                 </goals>
               </execution>

             </executions>
           </plugin>

         </plugins>
       </build>
     </profile>
   </profiles>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest" failures="7" tests="8" time="189.379" errors="0">
  <properties/>
  <testcase name="factoryShouldInitializeLegacyConfigMgmtWithComponentService" time="4.489" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest"/>
  <testcase name="factoryShouldInitializeLegacyConfigMgmtWithConfigurationUtilityService" time="0.008" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeLegacyConfigMgmtWithConfigurationUtilityService(ConfigManagementFactoryImplTest.java:171)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
  <testcase name="factoryShouldInitializeLoadStructuredAndRawWithComponentService" time="125.987" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeLoadStructuredAndRawWithComponentService(ConfigManagementFactoryImplTest.java:281)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
  <testcase name="factoryShouldInitializeLoadStructuredAndRawWithConfigurationUtilityService" time="55.251" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeLoadStructuredAndRawWithConfigurationUtilityService(ConfigManagementFactoryImplTest.java:304)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
  <testcase name="factoryShouldInitializeRawConfigMgmtWithComponentService" time="1.564" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeRawConfigMgmtWithComponentService(ConfigManagementFactoryImplTest.java:237)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
  <testcase name="factoryShouldInitializeRawConfigMgmtWithConfigurationUtilityService" time="0.692" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeRawConfigMgmtWithConfigurationUtilityService(ConfigManagementFactoryImplTest.java:259)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
  <testcase name="factoryShouldInitializeStructuredConfigMgmtWithComponentService" time="0.495" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeStructuredConfigMgmtWithComponentService(ConfigManagementFactoryImplTest.java:193)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
  <testcase name="factoryShouldInitializeStructuredConfigMgmtWithConfigurationUtilityService" time="0.544" classname="org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest">
    <failure type="org.jmock.api.ExpectationError" message="unexpected invocation">
      <![CDATA[unexpected invocation: componentService.fetchResourceComponent(<-1>)
expectations:
  allowed, never invoked: componentService.getComponent(<-1>, <interface org.rhq.core.pluginapi.inventory.ResourceComponent>, <READ>, <60000L>, <true>, <true>); returns <resourceComponent>
  allowed, already invoked 1 time: componentService.getResourceType(<-1>); returns <ResourceType[id=0, category=null, name=null, plugin=null]>
what happened before this:
  componentService.getResourceType(<-1>)

	at org.jmock.internal.InvocationDispatcher.dispatch(InvocationDispatcher.java:56)
	at org.jmock.Mockery.dispatch(Mockery.java:218)
	at org.jmock.Mockery.access$000(Mockery.java:43)
	at org.jmock.Mockery$MockObject.invoke(Mockery.java:258)
	at org.jmock.internal.InvocationDiverter.invoke(InvocationDiverter.java:27)
	at org.jmock.internal.FakeObjectMethods.invoke(FakeObjectMethods.java:38)
	at org.jmock.lib.JavaReflectionImposteriser$1.invoke(JavaReflectionImposteriser.java:33)
	at $Proxy5.fetchResourceComponent(Unknown Source)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.createStrategy(ConfigManagementFactoryImpl.java:78)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImpl.getStrategy(ConfigManagementFactoryImpl.java:50)
	at org.rhq.core.pc.configuration.ConfigManagementFactoryImplTest.factoryShouldInitializeStructuredConfigMgmtWithConfigurationUtilityService(ConfigManagementFactoryImplTest.java:215)
	at org.rhq.test.JMockTest.run(JMockTest.java:42)
... Removed 28 stack frames]]>
    </failure>
  </testcase>
</testsuite>

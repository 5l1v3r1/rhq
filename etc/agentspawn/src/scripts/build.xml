<?xml version="1.0" encoding="UTF-8"?>

<project name="agentspawn" default="help">

   <taskdef resource="net/sf/antcontrib/antcontrib.properties">
      <classpath>
         <pathelement location="${basedir}/ant-contrib-1.0b3.jar"/>
      </classpath>
   </taskdef>

   <property file="${basedir}/agentspawn.properties" />

   <if>
      <os family="windows"/>
      <then>
         <property name="iswindows" value="true" />
         <property name="perftest.agent.executable" value="${basedir}/agentspawn.bat" />
      </then>
      <else>
         <property name="perftest.agent.executable" value="${basedir}/agentspawn.sh" />
      </else>
   </if>

   <!-- ========== -->
   <target name="help">
      <echo>
         Target are: copy, start, stop, clean
         Run ant -projecthelp for more info.
      </echo>
   </target>

   <!-- ========== -->
   <target name="copy" description="Copies the source agent distro.">
      <echo>The source agent distro is found here: ${perftest.agent.dist.zip}</echo>
      <echo>The copied agent distros will be found here: ${perftest.agent.vm.dir}</echo>
      <echo>The list of copied agents is: ${perftest.agent.vm.startports}</echo>

      <!-- make sure the source distro exists and we create the dir where we copy all our agents -->
      <available file="${perftest.agent.dist.zip}"
                 type="file"
                 property="_perftest.agent.dist.zip.present"/>
      <fail unless="_perftest.agent.dist.zip.present"
            message="Missing agent distribution at ${perftest.agent.dist.zip}"/>
      <mkdir dir="${perftest.agent.vm.dir}" />

      <!-- copy the source agent distro - make one copy for each VM -->
      <foreach param="_index"
               list="${perftest.agent.vm.startports}"
               target="copy-agent-dist" />
   </target>

   <!-- ========== -->
   <target name="copy-agent-dist" >
      <echo>Copying agent distribution for agent [${_index}]</echo>
      <unzip dest="${perftest.agent.vm.dir}/${_index}">
         <fileset file="${perftest.agent.dist.zip}"/>
      </unzip>
      <echo>Copying agent spawn jar for agent [${_index}]</echo>
      <copy todir="${perftest.agent.vm.dir}/${_index}" flatten="true">
         <fileset dir="${perftest.agent.spawn.jar.dir}"
                  includes="${perftest.agent.spawn.jar.name}"/>
      </copy>
      <echo>Extracting the log4j.xml configuration for agents in [${_index}] VM</echo>
      <mkdir dir="${perftest.agent.vm.dir}/${_index}/log4j"/>
      <unjar dest="${perftest.agent.vm.dir}/${_index}/log4j">
         <fileset dir="${perftest.agent.spawn.jar.dir}"
                  includes="${perftest.agent.spawn.jar.name}"/>
         <patternset>
            <include name="spawn-log4j.xml"/>
         </patternset>
      </unjar>
      <echo>Creating the agent [${_index}] VM's logs directory</echo>
      <mkdir dir="${perftest.agent.vm.dir}/logs_${_index}" />
      <replace file="${perftest.agent.vm.dir}/${_index}/log4j/spawn-log4j.xml"
               token="AGENTSPAWN.LOG" value="${perftest.agent.vm.dir}/logs_${_index}/agent.log"/>
      <replace file="${perftest.agent.vm.dir}/${_index}/log4j/spawn-log4j.xml"
               token="AGENTSPAWN-COMMANDTRACE.LOG" value="${perftest.agent.vm.dir}/logs_${_index}/command-trace.log"/>
      <replace file="${perftest.agent.vm.dir}/${_index}/log4j/spawn-log4j.xml" token="\" value="/"/>
      <chmod dir="${perftest.agent.vm.dir}/${_index}/${perftest.agent.dist.zip.basedir}/bin" includes="*.sh" perm="ugo+rx"/>
   </target>

   <!-- ========== -->
   <target name="start" description="Starts all the agent VMs.">
      <echo>Starting all agent VMs...</echo>
      <foreach param="_index"
               list="${perftest.agent.vm.startports}"
               target="run-single-agent" />

      <echo>All agent VMs should have been started.</echo>
      <echo>Will pause for 60 seconds to make sure.</echo>
      <sleep seconds="60" />
   </target>

   <!-- ========== -->
   <target name="run-single-agent" >
      <propertycopy property="_javaopts"
                    from="perftest.agent.vm.javaopts.default"/>
      <propertycopy property="_javaopts"
                    from="perftest.agent.vm.javaopts.${_index}"
                    override="true"
                    silent="true"/>

      <propertycopy property="_sysprops"
                    from="perftest.agent.vm.sysprops.default"/>
      <propertycopy property="_sysprops"
                    from="perftest.agent.vm.sysprops.${_index}"
                    override="true"
                    silent="true"/>

      <propertycopy property="_cmdlineopts"
                    from="perftest.agent.vm.cmdlineopts.default"/>
      <propertycopy property="_cmdlineopts"
                    from="perftest.agent.vm.cmdlineopts.${_index}"
                    override="true"
                    silent="true"/>

      <propertycopy property="_sleep_millis"
                    from="perftest.agent.vm.sleep-before-launch.default"/>
      <propertycopy property="_sleep_millis"
                    from="perftest.agent.vm.sleep-before-launch.${_index}"
                    override="true"
                    silent="true"/>

      <echo>Pausing for ${_sleep_millis}ms before starting agent [${_index}]</echo>
      <sleep milliseconds="${_sleep_millis}"/>

      <echo>Starting agent [${_index}] with Java options [${_javaopts} ${_sysprops}] and cmdline opts [${_cmdlineopts}]</echo>

      <forget>
         <exec executable="${perftest.agent.executable}">
            <arg line="start" />
            <env key="_JAVAOPTS" value="${_javaopts} ${_sysprops} -Dlog4j.configuration=file:${perftest.agent.vm.dir}/${_index}/log4j/spawn-log4j.xml -Djava.util.prefs.userRoot=${java.io.tmpdir}/.java${_index} -Dperftest.bindaddress=${perftest.bindaddress} -Dperftest.agentdist=${perftest.agent.vm.dir}/${_index}/${perftest.agent.dist.zip.basedir} -Dperftest.spawndir=${perftest.agent.vm.dir}/spawn -Dperftest.spawncount=${perftest.agent.vm.spawncount} -Dperftest.startport=${_index} -Dperftest.startpause=${_sleep_millis} -Dperftest.cmdline=${_cmdlineopts} -Drhq.agent.server.bind-address=${rhq.agent.server.bind-address} -Drhq.agent.server.bind-port=${rhq.agent.server.bind-port}" />
            <env key="_JAR" value="${perftest.agent.vm.dir}/${_index}/${perftest.agent.spawn.jar.name}" />
            <env key="_PIDFILE" value="${perftest.agent.vm.dir}/${_index}/agentspawn.pid" />
            <env key="_OUT" value="${perftest.agent.vm.dir}/logs_${_index}/agentspawn-stdout.txt" />
         </exec>
      </forget>

   </target>

    <!-- ========== -->
    <target name="clean" description="Deletes all copies of the agent VMs.">
       <echo>Deleting all agent VMs...</echo>
       <foreach param="_index"
                list="${perftest.agent.vm.startports}"
                target="clean-single-vm" />

       <!-- TODO: really should just delete each individual agent's
            but we don't have a way to loop through each port number
            so just delete the entire spawn dir -->
       <delete dir="${perftest.agent.vm.dir}/spawn" />

       <echo>All agent VMs should have been deleted.</echo>
    </target>

    <!-- ========== -->
    <target name="clean-single-vm" description="Deletes a single agent VM and its preferences.">
       <echo>Deleting the agent VM found here: ${perftest.agent.vm.dir}/${_index}</echo>
       <delete dir="${perftest.agent.vm.dir}/${_index}" />
       <echo>Deleting the agent VM's logs found here: ${perftest.agent.vm.dir}/logs_${_index}</echo>
       <delete dir="${perftest.agent.vm.dir}/logs_${_index}" />
       <echo>Deleting all Java Preferences found here: ${java.io.tmpdir}/.java${_index}</echo>
       <delete dir="${java.io.tmpdir}/.java${_index}" />
    </target>

   <!-- ========== -->
   <target name="stop" description="Stops all the agent VMs.">
      <echo>Stopping all agent VMs...</echo>
      <foreach param="_index"
               list="${perftest.agent.vm.startports}"
               target="stop-single-agent" />
      <echo>All agent VMs should have been stopped.</echo>
   </target>

   <!-- ========== -->
   <target name="stop-single-agent">
      <loadfile property="_pid"
                srcfile="${perftest.agent.vm.dir}/${_index}/agentspawn.pid"
                failonerror="false">
         <filterchain>
            <striplinebreaks/>
         </filterchain>
      </loadfile>

      <echo>Stopping agent VM [${_index}] with pid [${_pid}]</echo>

      <if>
         <os family="windows"/>
         <then>
            <exec executable="taskkill.exe">
               <arg value="/F" />
               <arg value="/PID" />
               <arg value="${_pid}" />
            </exec>
         </then>
         <else>
            <exec executable="kill">
               <arg value="-TERM" />
               <arg value="${_pid}" />
            </exec>
         </else>
      </if>

   </target>

    <!-- ========== -->
    <target name="kill" description="Stops all the agent VMs. On unix uses kill -9, on windows its the same as stop">
       <echo>Killing all agent VMs...</echo>
       <foreach param="_index"
                list="${perftest.agent.vm.startports}"
                target="kill-single-agent" />
       <echo>All agent VMs should have been killed.</echo>
    </target>

    <!-- ========== -->
    <target name="kill-single-agent">
       <loadfile property="_pid"
                 srcfile="${perftest.agent.vm.dir}/${_index}/agentspawn.pid"
                 failonerror="false">
          <filterchain>
             <striplinebreaks/>
          </filterchain>
       </loadfile>

       <echo>Killing agent VM [${_index}] with pid [${_pid}]</echo>

       <if>
          <os family="windows"/>
          <then>
             <exec executable="taskkill.exe">
                <arg value="/F" />
                <arg value="/PID" />
                <arg value="${_pid}" />
             </exec>
          </then>
          <else>
             <exec executable="kill">
                <arg value="-9" />
                <arg value="${_pid}" />
             </exec>
          </else>
       </if>

    </target>	

</project>

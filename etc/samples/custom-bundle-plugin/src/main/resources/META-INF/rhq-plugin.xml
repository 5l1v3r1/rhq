<?xml version="1.0" encoding="UTF-8" ?>

<!--
   See the rhq-plugin.xsd file for detailed documentatoin on the schema. The notes in this file are to
   facilitate using this file as a base plugin descriptor. 
-->

<!--
   CHANGE: The name (and optional displayName) should be changed to reflect the plugin being developed. Keep in mind
           the value for name must be unique across all other plugins that are deployed.

           The package attribute should be changed to reflect the package in which all of the component classes
           are built.
-->
<plugin name="CustomBundlePlugin"
        displayName="My Custom Bundle Plugin"
        version="1.0"
        package="org.rhq.sample.custombundle"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration">


   <!--
      CHANGE: The following is a sample server resource type that supports a bundle type.
              Bundle plugins normally have a single server component marked as a singleton and defining a child bundle element.
   -->
   <server name="Custom Bundle Handler Server"
           discovery="SampleBundlePluginDiscoveryComponent"
           class="SampleBundlePluginServerComponent"
           singleton="true"
           description="This is a sample bundle resource type">

      <!--
         CHANGE: The bundle element defines the name of the bundle type. This bundle type identifies the kind of bundle
                 that this plugin can process. No two plugins should have the same bundle type name defined.
      -->
      <bundle type="MyCustomBundleType"/>

      <!--
         CHANGE: The entire plugin configuration is optional. If there are properties specific to handling how the
                 resource component will process bundles, they should be added here. If the plugin-configuration
                 entity is specified, at least one property must be provided.
      -->
      <plugin-configuration>
         <c:simple-property name="SamplePluginProperty" displayName="Sample Plugin Property" default="Value" />
      </plugin-configuration>

   </server>
</plugin>
